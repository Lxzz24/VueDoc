import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as r,c as u,a as s,b as t,w as n,d as i,e as a}from"./app-CvlAI_tu.js";const k="/VueDoc/assets/preorder_find_nodes-CDg_CoUJ.png",h="/VueDoc/assets/image-20240523150622109-C7BH93YY.png",d="/VueDoc/assets/image-20240523150933126-CrQCUQ_a.png",g="/VueDoc/assets/divide_and_conquer_merge_sort-Bkv0AKdN.png",v="/VueDoc/assets/knapsack_example-BjlOx0ko.png",b="/VueDoc/assets/knapsack_dp_comp_step1-BNdBqBru.png",y={},w={class:"hint-container details"},x=s("summary",null,"目录",-1),f={class:"table-of-contents"},M=i('<h2 id="🍀-回溯法" tabindex="-1"><a class="header-anchor" href="#🍀-回溯法" aria-hidden="true">#</a> 🍀 回溯法</h2><p>回溯算法（backtracking algorithm）是一种通过穷举来解决问题的方法，它的核心思想是从一个初始状态出发，暴力搜索所有可能的解决方案，当遇到正确的解则将其记录，直到找到解或者尝试了所有可能的选择都无法找到解为止。</p><p>回溯算法通常采用 “深度优先搜索 DFS” 来遍历解空间。</p><blockquote><p>分支限界法常采用 “广度优先搜索” / “最小耗费优先搜索”</p></blockquote><figure><img src="'+k+'" alt="在前序遍历中搜索节点" tabindex="0" loading="lazy"><figcaption>在前序遍历中搜索节点</figcaption></figure><h3 id="🌸-n-皇后问题" tabindex="-1"><a class="header-anchor" href="#🌸-n-皇后问题" aria-hidden="true">#</a> 🌸 N 皇后问题</h3>',6),_=s("p",null,[a("根据国际象棋的规则，皇后可以攻击与同处一行、一列或一条斜线上的棋子。给定 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" 个皇后和一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mo",null,"×"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n \\times n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" 大小的棋盘，寻找使得所有皇后之间无法相互攻击的摆放方案。")],-1),q=s("figure",null,[s("img",{src:h,alt:"N皇后问题",tabindex:"0",loading:"lazy"}),s("figcaption",null,"N皇后问题")],-1),j=s("figure",null,[s("img",{src:d,alt:"逐行放置策略",tabindex:"0",loading:"lazy"}),s("figcaption",null,"逐行放置策略")],-1),z=s("div",{class:"language-c line-numbers-mode","data-ext":"c"},[s("pre",{class:"language-c"},[s("code",null,[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),a(),s("span",{class:"token string"},"<math.h>")]),a(`
`),s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),a(),s("span",{class:"token string"},"<stdio.h>")]),a(`

`),s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"define"),a(),s("span",{class:"token macro-name"},"N"),a(),s("span",{class:"token expression"},[s("span",{class:"token number"},"4")])]),a(`
`),s("span",{class:"token comment"},"// #define N 10"),a(`

`),s("span",{class:"token keyword"},"int"),a(" q"),s("span",{class:"token punctuation"},"["),a("N "),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 存储皇后的列号"),a(`

`),s("span",{class:"token keyword"},"int"),a(),s("span",{class:"token function"},"check"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),a(" j"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 检查第 j 个皇后的位置是否合法"),a(`
    `),s("span",{class:"token keyword"},"int"),a(" i"),s("span",{class:"token punctuation"},";"),a(`
    `),s("span",{class:"token keyword"},"for"),a(),s("span",{class:"token punctuation"},"("),a("i "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"<"),a(" j"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"++"),a(),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
        `),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("q"),s("span",{class:"token punctuation"},"["),a("i"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"=="),a(" q"),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"||"),a(),s("span",{class:"token function"},"abs"),s("span",{class:"token punctuation"},"("),a("i "),s("span",{class:"token operator"},"-"),a(" j"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token operator"},"=="),a(),s("span",{class:"token function"},"abs"),s("span",{class:"token punctuation"},"("),a("q"),s("span",{class:"token punctuation"},"["),a("i"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"-"),a(" q"),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 判断是否在同一列和同一斜线上"),a(`
            `),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),a(`
        `),s("span",{class:"token punctuation"},"}"),a(`
    `),s("span",{class:"token punctuation"},"}"),a(`

    `),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(`
`),s("span",{class:"token punctuation"},"}"),a(`

`),s("span",{class:"token keyword"},"void"),a(),s("span",{class:"token function"},"queen"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 求解 N 皇后 方案"),a(`
    `),s("span",{class:"token keyword"},"int"),a(" i"),s("span",{class:"token punctuation"},";"),a(`
    `),s("span",{class:"token keyword"},"for"),a(),s("span",{class:"token punctuation"},"("),a("i "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"<="),a(" N"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"++"),a(),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
        q`),s("span",{class:"token punctuation"},"["),a("i"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),a(`
    `),s("span",{class:"token punctuation"},"}"),a(`

    `),s("span",{class:"token keyword"},"int"),a(" answer "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 方案数"),a(`

    `),s("span",{class:"token keyword"},"int"),a(" j "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 表示正在摆放第 j 个皇后"),a(`
    `),s("span",{class:"token keyword"},"while"),a(),s("span",{class:"token punctuation"},"("),a("j "),s("span",{class:"token operator"},">="),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
        q`),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"="),a(" q"),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 让第 j 个皇后向后一列摆放"),a(`

        `),s("span",{class:"token keyword"},"while"),a(),s("span",{class:"token punctuation"},"("),a("q"),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"<="),a(" N "),s("span",{class:"token operator"},"&&"),a(),s("span",{class:"token operator"},"!"),s("span",{class:"token function"},"check"),s("span",{class:"token punctuation"},"("),a("j"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 判断第 j 个皇后的位置是否合法"),a(`
            q`),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"="),a(" q"),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 不合法就往后一个位置摆放"),a(`
        `),s("span",{class:"token punctuation"},"}"),a(`

        `),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("q"),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"<="),a(" N"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 表示第 j 个皇后的找到一个合法的摆放位置"),a(`
            `),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("j "),s("span",{class:"token operator"},"=="),a(" N"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 找到了 N 皇后的一组解"),a(`
                answer `),s("span",{class:"token operator"},"="),a(" answer "),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(`
                `),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"方案%d："'),s("span",{class:"token punctuation"},","),a(" answer"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`

                `),s("span",{class:"token keyword"},"for"),a(),s("span",{class:"token punctuation"},"("),a("i "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"<="),a(" N"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"++"),a(),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
                    `),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"%d "'),s("span",{class:"token punctuation"},","),a(" q"),s("span",{class:"token punctuation"},"["),a("i"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`
                `),s("span",{class:"token punctuation"},"}"),a(`
                `),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"\\n"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`
            `),s("span",{class:"token punctuation"},"}"),a(),s("span",{class:"token keyword"},"else"),a(),s("span",{class:"token punctuation"},"{"),a(`
                j `),s("span",{class:"token operator"},"="),a(" j "),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 继续摆放下一个皇后"),a(`
            `),s("span",{class:"token punctuation"},"}"),a(`
        `),s("span",{class:"token punctuation"},"}"),a(),s("span",{class:"token keyword"},"else"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 表示第 j 个皇后找不到一个合法的摆放位置"),a(`
            q`),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 还原第 j 个皇后的位置"),a(`
            j `),s("span",{class:"token operator"},"="),a(" j "),s("span",{class:"token operator"},"-"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 回溯"),a(`
        `),s("span",{class:"token punctuation"},"}"),a(`
    `),s("span",{class:"token punctuation"},"}"),a(`
`),s("span",{class:"token punctuation"},"}"),a(`

`),s("span",{class:"token keyword"},"int"),a(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
    `),s("span",{class:"token function"},"queen"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`

    `),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),a(`
`),s("span",{class:"token punctuation"},"}"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),L=s("div",{class:"language-c line-numbers-mode","data-ext":"c"},[s("pre",{class:"language-c"},[s("code",null,[s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),a(),s("span",{class:"token string"},"<math.h>")]),a(`
`),s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"include"),a(),s("span",{class:"token string"},"<stdio.h>")]),a(`

`),s("span",{class:"token macro property"},[s("span",{class:"token directive-hash"},"#"),s("span",{class:"token directive keyword"},"define"),a(),s("span",{class:"token macro-name"},"N"),a(),s("span",{class:"token expression"},[s("span",{class:"token number"},"4")])]),a(`
`),s("span",{class:"token comment"},"// #define N 10"),a(`

`),s("span",{class:"token keyword"},"int"),a(" answer "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),a(`
`),s("span",{class:"token keyword"},"int"),a(" q"),s("span",{class:"token punctuation"},"["),a("N "),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 存储皇后的列号"),a(`

`),s("span",{class:"token keyword"},"int"),a(),s("span",{class:"token function"},"check"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),a(" j"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 检查第 j 个皇后的位置是否合法"),a(`
    `),s("span",{class:"token keyword"},"int"),a(" i"),s("span",{class:"token punctuation"},";"),a(`
    `),s("span",{class:"token keyword"},"for"),a(),s("span",{class:"token punctuation"},"("),a("i "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"<"),a(" j"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"++"),a(),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
        `),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("q"),s("span",{class:"token punctuation"},"["),a("i"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"=="),a(" q"),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"||"),a(),s("span",{class:"token function"},"abs"),s("span",{class:"token punctuation"},"("),a("i "),s("span",{class:"token operator"},"-"),a(" j"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token operator"},"=="),a(),s("span",{class:"token function"},"abs"),s("span",{class:"token punctuation"},"("),a("q"),s("span",{class:"token punctuation"},"["),a("i"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"-"),a(" q"),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 判断是否在同一列和同一斜线上"),a(`
            `),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 0 表示 false"),a(`
        `),s("span",{class:"token punctuation"},"}"),a(`
    `),s("span",{class:"token punctuation"},"}"),a(`
    `),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 1 表示 true"),a(`
`),s("span",{class:"token punctuation"},"}"),a(`

`),s("span",{class:"token keyword"},"void"),a(),s("span",{class:"token function"},"queen"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),a(" j"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
    `),s("span",{class:"token keyword"},"int"),a(" i"),s("span",{class:"token punctuation"},";"),a(`
    `),s("span",{class:"token keyword"},"for"),a(),s("span",{class:"token punctuation"},"("),a("i "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"<="),a(" N"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"++"),a(),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
        q`),s("span",{class:"token punctuation"},"["),a("j"),s("span",{class:"token punctuation"},"]"),a(),s("span",{class:"token operator"},"="),a(" i"),s("span",{class:"token punctuation"},";"),a(`

        `),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),s("span",{class:"token function"},"check"),s("span",{class:"token punctuation"},"("),a("j"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 当摆放的皇后位置为合法时"),a(`
            `),s("span",{class:"token keyword"},"if"),a(),s("span",{class:"token punctuation"},"("),a("j "),s("span",{class:"token operator"},"=="),a(" N"),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(),s("span",{class:"token comment"},"// 找到了 N 皇后的一组解"),a(`
                answer `),s("span",{class:"token operator"},"="),a(" answer "),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(`
                `),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"方案%d："'),s("span",{class:"token punctuation"},","),a(" answer"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`

                `),s("span",{class:"token keyword"},"for"),a(),s("span",{class:"token punctuation"},"("),a("i "),s("span",{class:"token operator"},"="),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"<="),a(" N"),s("span",{class:"token punctuation"},";"),a(" i "),s("span",{class:"token operator"},"++"),a(),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
                    `),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"%d "'),s("span",{class:"token punctuation"},","),a(" q"),s("span",{class:"token punctuation"},"["),a("i"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`
                `),s("span",{class:"token punctuation"},"}"),a(`
                `),s("span",{class:"token function"},"printf"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"\\n"'),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`
            `),s("span",{class:"token punctuation"},"}"),a(),s("span",{class:"token keyword"},"else"),a(),s("span",{class:"token punctuation"},"{"),a(`
                `),s("span",{class:"token function"},"queen"),s("span",{class:"token punctuation"},"("),a("j "),s("span",{class:"token operator"},"+"),a(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(),s("span",{class:"token comment"},"// 递归摆放下一个皇后的位置"),a(`
            `),s("span",{class:"token punctuation"},"}"),a(`
        `),s("span",{class:"token punctuation"},"}"),a(`
    `),s("span",{class:"token punctuation"},"}"),a(`
`),s("span",{class:"token punctuation"},"}"),a(`

`),s("span",{class:"token keyword"},"int"),a(),s("span",{class:"token function"},"main"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),a(),s("span",{class:"token punctuation"},"{"),a(`
    `),s("span",{class:"token function"},"queen"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),a(`

    `),s("span",{class:"token keyword"},"return"),a(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),a(`
`),s("span",{class:"token punctuation"},"}"),a(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),A=i('<h2 id="🍀-分治法" tabindex="-1"><a class="header-anchor" href="#🍀-分治法" aria-hidden="true">#</a> 🍀 分治法</h2><blockquote><p>快速排序、归并排序、汉诺塔问题</p></blockquote><p>递归有两个基本要素：</p><ul><li><strong>边界条件</strong>，即确定递归到何时终止，也称为递归出口</li><li><strong>递归模式</strong>，即大问题是如何分解为小问题的，也称为递归体</li></ul><p>分治算法在每一层递归上都有 3 个步骤：</p><ol><li><em>分解</em>。将原问题分解成一系列子问题。</li><li><em>求解</em>。递归地求解各子问题。若子问题足够小，则直接求解。</li><li><em>合并</em>。将子问题的解合并成原问题的解。</li></ol><h3 id="归并排序算法" tabindex="-1"><a class="header-anchor" href="#归并排序算法" aria-hidden="true">#</a> 归并排序算法</h3><p>“归并排序”是分治策略的典型应用之一。</p><figure><img src="'+g+'" alt="归并排序的分治策略" tabindex="0" loading="lazy"><figcaption>归并排序的分治策略</figcaption></figure><ul><li><strong>分</strong>：递归地将原数组（原问题）划分为两个子数组（子问题），直到子数组只剩一个元素（最小子问题）。</li><li><strong>治</strong>：从底至顶地将有序的子数组（子问题的解）进行合并，从而得到有序的原数组（原问题的解）。</li></ul>',10),N=s("p",null,[s("strong",null,[a("时间复杂度为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(\\log n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mop"},[a("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(" 的搜索算法通常是基于分治策略实现的")])],-1),B=s("h3",{id:"最大字段和问题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#最大字段和问题","aria-hidden":"true"},"#"),a(" 最大字段和问题")],-1),C=s("p",null,[a("给定长度为 n 的整数序列，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",null,"…"),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"a[1…n]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},"…"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")])])]),a(", 求 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"[1,n]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")])])]),a(" 某个子区间 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"j"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"[i,j]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},"]")])])]),a(" 使得 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mo",null,"…"),s("mo",null,"+"),s("mi",null,"a"),s("mo",{stretchy:"false"},"["),s("mi",null,"j"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"a[i]+…+a[j]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"minner"},"…"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},"]")])])]),a(" 和最大. 或者求出最大的这个和。")],-1),S=s("blockquote",null,[s("p",null,[a("例如 (-2,11,-4,13,-5,2) 的最大子段和为 20, 所求子区间为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mn",null,"2"),s("mo",{separator:"true"},","),s("mn",null,"4"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"[2,4]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"2"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mclose"},"]")])])]),a("。")])],-1),O=i(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">MaxSubSum</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>Array<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">==</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 分解到单个整数，不可继续分解</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            sum <span class="token operator">=</span> Array<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 从 left 和 right 中间分解数组</span>
        <span class="token keyword">int</span> center <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 划分的位置</span>
        <span class="token keyword">int</span> leftSum <span class="token operator">=</span> <span class="token function">MaxSubSum</span><span class="token punctuation">(</span>Array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> center<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rightSum <span class="token operator">=</span> <span class="token function">MaxSubSum</span><span class="token punctuation">(</span>Array<span class="token punctuation">,</span> center <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 计算包含 center 的最大值，判断是情形 1/2/3</span>
        <span class="token keyword">int</span> s1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> lefts <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> center<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> left<span class="token punctuation">;</span> i <span class="token operator">--</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            lefts <span class="token operator">+=</span> Array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lefts <span class="token operator">&gt;</span> s1<span class="token punctuation">)</span><span class="token punctuation">{</span>
                s1 <span class="token operator">=</span> lefts<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> s2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rights <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> center <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> right<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rights <span class="token operator">+=</span> Array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rights <span class="token operator">&gt;</span> s2<span class="token punctuation">)</span>
                s2 <span class="token operator">=</span> rights<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        sum <span class="token operator">=</span> s1 <span class="token operator">+</span> s2<span class="token punctuation">;</span>
        <span class="token comment">// 情形 1</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> leftSum<span class="token punctuation">)</span>
            sum <span class="token operator">=</span> leftSum<span class="token punctuation">;</span>
        <span class="token comment">// 情形 2</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;</span> rightSum<span class="token punctuation">)</span>
            sum <span class="token operator">=</span> rightSum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token operator">*</span>Array <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>
    Array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
    Array<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">;</span>
    Array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span>
    Array<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">;</span>
    Array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">MaxSubSum</span><span class="token punctuation">(</span>Array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🍀-动态规划法-❗️❗️❗️" tabindex="-1"><a class="header-anchor" href="#🍀-动态规划法-❗️❗️❗️" aria-hidden="true">#</a> 🍀 动态规划法 ❗️❗️❗️</h2><blockquote><p>以获取问题最优解为目标</p></blockquote><p>与分治法类似，将待求解问题分解成若干个子问题；与分治法不同的是，动态规划法求解的问题，经分解得到的子问题往往不是独立的。</p><ol><li>找出最优解的性质，并刻画其结构特征。</li><li>递归地定义最优解的值。</li><li>以自底向上的方式计算出最优值。</li><li>根据计算最优值时得到的信息，构造一个最优解。</li></ol><p>何时应用动态规划来设计算法？</p><ol><li>最优子结构</li><li>重叠子问题</li></ol><h3 id="🌸-0-1-背包问题" tabindex="-1"><a class="header-anchor" href="#🌸-0-1-背包问题" aria-hidden="true">#</a> 🌸 0-1 背包问题</h3>`,8),V=s("blockquote",null,[s("p",null,[a("给定 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" 个物品，第 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord mathnormal"},"i")])])]),a(" 个物品的重量为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"w"),s("mi",null,"g"),s("mi",null,"t"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"wgt[i-1]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]")])])]),a("、价值为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"v"),s("mi",null,"a"),s("mi",null,"l"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"val[i-1]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]")])])]),a(" ，和一个容量为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"c"),s("mi",null,"a"),s("mi",null,"p")]),s("annotation",{encoding:"application/x-tex"},"cap")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"p")])])]),a(" 的背包。每个物品只能选择一次，问在限定背包容量下能放入物品的最大价值。")])],-1),D=s("p",null,[a("时间复杂度："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"N"),s("mo",null,"×"),s("mi",null,"W"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(N \\times W)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mclose"},")")])])]),a(" N：物品数量 W：背包容量")],-1),W=s("figure",null,[s("img",{src:v,alt:"0-1 背包的示例数据",tabindex:"0",loading:"lazy"}),s("figcaption",null,"0-1 背包的示例数据")],-1),T=s("figure",null,[s("img",{src:b,alt:"0-1 背包的空间优化后的动态规划过程",tabindex:"0",loading:"lazy"}),s("figcaption",null,"0-1 背包的空间优化后的动态规划过程")],-1),Q=s("h3",{id:"矩阵连乘问题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#矩阵连乘问题","aria-hidden":"true"},"#"),a(" 矩阵连乘问题")],-1),U=s("blockquote",null,[s("p",null,[s("mark",null,"线性代数："),a(" 一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"p"),s("mo",null,"×"),s("mi",null,"q")]),s("annotation",{encoding:"application/x-tex"},"p×q")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q")])])]),a(" 的矩阵 A 和一个 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"q"),s("mo",null,"×"),s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"q×r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r")])])]),a(" 的矩阵 B 的乘积是一个新的 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"p"),s("mo",null,"×"),s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"p×r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r")])])]),a(" 的矩阵 C")])],-1),Y=s("p",null,[a("若矩阵 A："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"p"),s("mo",null,"×"),s("mi",null,"q")]),s("annotation",{encoding:"application/x-tex"},"p×q")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q")])])]),a("，矩阵 B："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"q"),s("mo",null,"×"),s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"q×r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r")])])]),a("，矩阵 C："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mo",null,"×"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"r×s")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"s")])])]),a("，则连乘的计算次数为：")],-1),E=s("ol",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"A"),s("mi",null,"B"),s("mo",{stretchy:"false"},")"),s("mi",null,"C"),s("mo",null,"="),s("mi",null,"p"),s("mi",null,"q"),s("mi",null,"r"),s("mo",null,"+"),s("mi",null,"p"),s("mi",null,"r"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"(AB)C = pqr + prs")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mclose"},")"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"pq"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mord mathnormal"},"rs")])])])]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"A"),s("mo",{stretchy:"false"},"("),s("mi",null,"B"),s("mi",null,"C"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"q"),s("mi",null,"r"),s("mi",null,"s"),s("mo",null,"+"),s("mi",null,"p"),s("mi",null,"q"),s("mi",null,"s")]),s("annotation",{encoding:"application/x-tex"},"A(BC) = qrs + pqs")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"BC"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mord mathnormal"},"rs"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"pq"),s("span",{class:"mord mathnormal"},"s")])])])])],-1),F=s("blockquote",null,[s("p",null,[a("若 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"1")])]),s("annotation",{encoding:"application/x-tex"},"M_1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"M_2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"3")])]),s("annotation",{encoding:"application/x-tex"},"M_3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"4")])]),s("annotation",{encoding:"application/x-tex"},"M_4")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 相乘的维度序列为 2、6、3、10、3，则乘法次树为 ？"),s("br"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"1")]),s("mo",null,"="),s("mn",null,"2"),s("mo",null,"×"),s("mn",null,"6")]),s("annotation",{encoding:"application/x-tex"},"M_1 = 2×6")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"6")])])]),a("、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"2")]),s("mo",null,"="),s("mn",null,"6"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"M_2 = 6×3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"6"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a("、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"3")]),s("mo",null,"="),s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"10")]),s("annotation",{encoding:"application/x-tex"},"M_3 = 3×10")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"10")])])]),a("、"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"4")]),s("mo",null,"="),s("mn",null,"10"),s("mo",null,"×"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"M_4 = 10×3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"10"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),a("，再按上述方法求解即可： "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"M"),s("mn",null,"1")]),s("mo",null,"×"),s("msub",null,[s("mi",null,"M"),s("mn",null,"2")]),s("mo",{stretchy:"false"},")"),s("mo",null,"×"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"M"),s("mn",null,"3")]),s("mo",null,"×"),s("msub",null,[s("mi",null,"M"),s("mn",null,"4")]),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mn",null,"2"),s("mo",null,"×"),s("mn",null,"6"),s("mo",null,"×"),s("mn",null,"3"),s("mo",null,"+"),s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"10"),s("mo",null,"×"),s("mn",null,"3"),s("mo",null,"+"),s("mn",null,"2"),s("mo",null,"×"),s("mn",null,"3"),s("mo",null,"×"),s("mn",null,"3"),s("mo",null,"="),s("mn",null,"144")]),s("annotation",{encoding:"application/x-tex"},"(M_1×M_2)×(M_3×M_4) = 2×6×3 + 3×10×3 + 2×3×3 = 144")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"6"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"10"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"144")])])])])],-1),H=s("ul",null,[s("li",null,[s("strong",null,"时间复杂度"),a("："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mtext",null,"（"),s("msup",null,[s("mi",null,"n"),s("mn",null,"3")]),s("mtext",null,"）")]),s("annotation",{encoding:"application/x-tex"},"O（n³）")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord cjk_fallback"},"（"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"3")])])])])])])])]),s("span",{class:"mord cjk_fallback"},"）")])])])]),s("li",null,[s("strong",null,"空间复杂度"),a(),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mtext",null,"（"),s("msup",null,[s("mi",null,"n"),s("mn",null,"2")]),s("mtext",null,"）")]),s("annotation",{encoding:"application/x-tex"},"O（n²）")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord cjk_fallback"},"（"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])])]),s("span",{class:"mord cjk_fallback"},"）")])])])])],-1),J=s("h2",{id:"🍀-贪心法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🍀-贪心法","aria-hidden":"true"},"#"),a(" 🍀 贪心法")],-1),K=s("p",null,"指在对问题进行求解时，在每一步选择中都采取最好或者最优(即最有利)的选择，从而希望能够导致结果是最好或者最优的算法。",-1),G=s("p",null,"贪婪算法所得到的结果不一定是最优的结果(有时候会是最优解)，但是都是相对近似(接近)最优解的结果",-1),I=s("h3",{id:"部分背包问题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#部分背包问题","aria-hidden":"true"},"#"),a(" 部分背包问题")],-1),P=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"单位重量的价值"),s("mo",null,"="),s("mtext",null,"价值"),s("mi",{mathvariant:"normal"},"/"),s("mtext",null,"重量")]),s("annotation",{encoding:"application/x-tex"},"单位重量的价值 = 价值 / 重量")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"单位重量的价值"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord cjk_fallback"},"价值"),s("span",{class:"mord"},"/"),s("span",{class:"mord cjk_fallback"},"重量")])])])],-1),R=s("ol",null,[s("li",null,"按最大价值先放背包的原则 ❌"),s("li",null,"按最小重量先放背包的原则 ❌"),s("li",null,"按最大单位重量价值先放背包的原则 ✅")],-1);function X(Z,$){const l=o("router-link"),c=o("CodeTabs");return r(),u("div",null,[s("details",w,[x,s("nav",f,[s("ul",null,[s("li",null,[t(l,{to:"#🍀-回溯法"},{default:n(()=>[a("🍀 回溯法")]),_:1}),s("ul",null,[s("li",null,[t(l,{to:"#🌸-n-皇后问题"},{default:n(()=>[a("🌸 N 皇后问题")]),_:1})])])]),s("li",null,[t(l,{to:"#🍀-分治法"},{default:n(()=>[a("🍀 分治法")]),_:1}),s("ul",null,[s("li",null,[t(l,{to:"#归并排序算法"},{default:n(()=>[a("归并排序算法")]),_:1})]),s("li",null,[t(l,{to:"#最大字段和问题"},{default:n(()=>[a("最大字段和问题")]),_:1})])])]),s("li",null,[t(l,{to:"#🍀-动态规划法-❗️❗️❗️"},{default:n(()=>[a("🍀 动态规划法 ❗️❗️❗️")]),_:1}),s("ul",null,[s("li",null,[t(l,{to:"#🌸-0-1-背包问题"},{default:n(()=>[a("🌸 0-1 背包问题")]),_:1})]),s("li",null,[t(l,{to:"#矩阵连乘问题"},{default:n(()=>[a("矩阵连乘问题")]),_:1})])])]),s("li",null,[t(l,{to:"#🍀-贪心法"},{default:n(()=>[a("🍀 贪心法")]),_:1}),s("ul",null,[s("li",null,[t(l,{to:"#部分背包问题"},{default:n(()=>[a("部分背包问题")]),_:1})])])])])])]),M,_,q,j,t(c,{id:"34",data:[{id:"非递归"},{id:"递归"}]},{title0:n(({value:e,isActive:p})=>[a("非递归")]),title1:n(({value:e,isActive:p})=>[a("递归")]),tab0:n(({value:e,isActive:p})=>[z]),tab1:n(({value:e,isActive:p})=>[L]),_:1}),A,N,B,C,S,O,V,D,W,T,Q,U,Y,E,F,H,J,K,G,I,P,R,t(c,{id:"258",data:[{id:""}]},{title0:n(({value:e,isActive:p})=>[]),tab0:n(({value:e,isActive:p})=>[]),_:1}),t(c,{id:"265",data:[{id:""}]},{title0:n(({value:e,isActive:p})=>[]),tab0:n(({value:e,isActive:p})=>[]),_:1})])}const ns=m(y,[["render",X],["__file","9.html.vue"]]);export{ns as default};
