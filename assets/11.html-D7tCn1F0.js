const t=JSON.parse('{"key":"v-7d09e5af","path":"/1-Java/8_IO/11.html","title":"使用 Files","lang":"zh-CN","frontmatter":{"title":"使用 Files","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 从 Java 7 开始，提供了 Files 这个工具类，能极大地方便我们读写文件。 虽然 Files 是 java.nio 包里面的类，但他俩封装了很多读写文件的简单方法，例如，我们要把一个文件的全部内容读取为一个 byte[]，可以这么写： 如果是文本文件，可以把一个文件的全部内容读取为 String： 写入文件也非常方便： 此...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/8_IO/11.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"使用 Files"}],["meta",{"property":"og:description","content":"目录 [[toc]] 从 Java 7 开始，提供了 Files 这个工具类，能极大地方便我们读写文件。 虽然 Files 是 java.nio 包里面的类，但他俩封装了很多读写文件的简单方法，例如，我们要把一个文件的全部内容读取为一个 byte[]，可以这么写： 如果是文本文件，可以把一个文件的全部内容读取为 String： 写入文件也非常方便： 此..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 Files\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":1.19,"words":358},"filePathRelative":"1-Java/8_IO/11.md","localizedDate":"2024年1月4日","autoDesc":true}');export{t as data};
