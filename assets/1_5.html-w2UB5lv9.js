const t=JSON.parse('{"key":"v-769be67c","path":"/1-Java/19_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/1_5.html","title":"单例","lang":"zh-CN","frontmatter":{"title":"单例","category":"Java 教程","tag":"Java","headerDepth":1,"description":"保证一个类仅有一个实例，并提供一个访问它的全局访问点。 单例模式（Singleton）的目的是为了保证在一个进程中，某个类有且仅有一个实例。 因为这个类只有一个实例，因此，自然不能让调用方使用 new Xyz() 来创建实例了。所以，单例的构造方法必须是 private，这样就防止了调用方自己创建实例，但是在类的内部，是可以用一个静态字段来引用唯一创建...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/19_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/1_5.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"单例"}],["meta",{"property":"og:description","content":"保证一个类仅有一个实例，并提供一个访问它的全局访问点。 单例模式（Singleton）的目的是为了保证在一个进程中，某个类有且仅有一个实例。 因为这个类只有一个实例，因此，自然不能让调用方使用 new Xyz() 来创建实例了。所以，单例的构造方法必须是 private，这样就防止了调用方自己创建实例，但是在类的内部，是可以用一个静态字段来引用唯一创建..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"单例\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 练习","slug":"🍀-练习","link":"#🍀-练习","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704939586000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":3.62,"words":1087},"filePathRelative":"1-Java/19_设计模式/1_5.md","localizedDate":"2024年1月11日","autoDesc":true}');export{t as data};
