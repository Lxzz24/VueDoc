const e=JSON.parse('{"key":"v-77b8c9f6","path":"/2-%E8%BD%AF%E8%80%83/%E4%B8%8A%E5%8D%88%E9%A2%98/9.html","title":"9-算法设计与分析 ⑳ ✅","lang":"zh-CN","frontmatter":{"title":"9-算法设计与分析 ⑳ ✅","category":"软考笔记","tag":"软考","headerDepth":1,"description":"目录 [[toc]] 🍀 回溯法 回溯算法（backtracking algorithm）是一种通过穷举来解决问题的方法，它的核心思想是从一个初始状态出发，暴力搜索所有可能的解决方案，当遇到正确的解则将其记录，直到找到解或者尝试了所有可能的选择都无法找到解为止。 回溯算法通常采用 “深度优先搜索 DFS” 来遍历解空间。 分支限界法常采用 “广度优先...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/2-%E8%BD%AF%E8%80%83/%E4%B8%8A%E5%8D%88%E9%A2%98/9.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"9-算法设计与分析 ⑳ ✅"}],["meta",{"property":"og:description","content":"目录 [[toc]] 🍀 回溯法 回溯算法（backtracking algorithm）是一种通过穷举来解决问题的方法，它的核心思想是从一个初始状态出发，暴力搜索所有可能的解决方案，当遇到正确的解则将其记录，直到找到解或者尝试了所有可能的选择都无法找到解为止。 回溯算法通常采用 “深度优先搜索 DFS” 来遍历解空间。 分支限界法常采用 “广度优先..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.gxmnzl.cn/VueDoc/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-03T03:08:39.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"9-算法设计与分析 ⑳ ✅"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"软考"}],["meta",{"property":"article:modified_time","content":"2024-06-03T03:08:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9-算法设计与分析 ⑳ ✅\\",\\"image\\":[\\"https://www.gxmnzl.cn/VueDoc/\\"],\\"dateModified\\":\\"2024-06-03T03:08:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 回溯法","slug":"🍀-回溯法","link":"#🍀-回溯法","children":[{"level":3,"title":"🌸 N 皇后问题","slug":"🌸-n-皇后问题","link":"#🌸-n-皇后问题","children":[]}]},{"level":2,"title":"🍀 分治法","slug":"🍀-分治法","link":"#🍀-分治法","children":[{"level":3,"title":"归并排序算法","slug":"归并排序算法","link":"#归并排序算法","children":[]},{"level":3,"title":"最大字段和问题","slug":"最大字段和问题","link":"#最大字段和问题","children":[]}]},{"level":2,"title":"🍀 动态规划法 ❗️❗️❗️","slug":"🍀-动态规划法-❗️❗️❗️","link":"#🍀-动态规划法-❗️❗️❗️","children":[{"level":3,"title":"🌸 0-1 背包问题","slug":"🌸-0-1-背包问题","link":"#🌸-0-1-背包问题","children":[]},{"level":3,"title":"矩阵连乘问题","slug":"矩阵连乘问题","link":"#矩阵连乘问题","children":[]}]},{"level":2,"title":"🍀 贪心法","slug":"🍀-贪心法","link":"#🍀-贪心法","children":[{"level":3,"title":"部分背包问题","slug":"部分背包问题","link":"#部分背包问题","children":[]}]}],"git":{"createdTime":1704354222000,"updatedTime":1717384119000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":3}]},"readingTime":{"minutes":6.27,"words":1881},"filePathRelative":"2-软考/上午题/9.md","localizedDate":"2024年1月4日","autoDesc":true}');export{e as data};
