const t=JSON.parse('{"key":"v-7a0597ba","path":"/1-Java/19_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/1_4.html","title":"原型","lang":"zh-CN","frontmatter":{"title":"原型","category":"Java 教程","tag":"Java","headerDepth":1,"description":"用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。 原型模式，即 Prototype，是指创建新对象的时候，根据现有的一个原型来创建。 我们举个例子：如果我们已经有了一个 String[] 数组，想再创建一个一模一样的 String[] 数组，怎么写？ 实际上创建过程很简单，就是把现有数组的元素复制到新数组。如果我们把这个创建过程封装一下...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/19_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/1_4.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"原型"}],["meta",{"property":"og:description","content":"用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。 原型模式，即 Prototype，是指创建新对象的时候，根据现有的一个原型来创建。 我们举个例子：如果我们已经有了一个 String[] 数组，想再创建一个一模一样的 String[] 数组，怎么写？ 实际上创建过程很简单，就是把现有数组的元素复制到新数组。如果我们把这个创建过程封装一下..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 练习","slug":"🍀-练习","link":"#🍀-练习","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704939586000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":1.74,"words":522},"filePathRelative":"1-Java/19_设计模式/1_4.md","localizedDate":"2024年1月11日","autoDesc":true}');export{t as data};
