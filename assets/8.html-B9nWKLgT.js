const e=JSON.parse('{"key":"v-1a00986e","path":"/1-Java/2_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80/8.html","title":"接口","lang":"zh-CN","frontmatter":{"title":"接口","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 在抽象类中，抽象方法本质上是 _定义接口规范_ ：即规定高层类的接口，从而保证所有子类都有相同的接口实现，这样，多态就能发挥出威力。 如果一个抽象类没有字段，所有方法全部都是抽象方法： 就可以把该抽象类改写为接口： interface 。 在 Java 中，使用 interface 可以声明一个接口： 所谓 interface，就...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/2_%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80/8.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"接口"}],["meta",{"property":"og:description","content":"目录 [[toc]] 在抽象类中，抽象方法本质上是 _定义接口规范_ ：即规定高层类的接口，从而保证所有子类都有相同的接口实现，这样，多态就能发挥出威力。 如果一个抽象类没有字段，所有方法全部都是抽象方法： 就可以把该抽象类改写为接口： interface 。 在 Java 中，使用 interface 可以声明一个接口： 所谓 interface，就..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-04T08:53:47.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-06-04T08:53:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接口\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-04T08:53:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 术语","slug":"🍀-术语","link":"#🍀-术语","children":[]},{"level":2,"title":"🍀 接口继承","slug":"🍀-接口继承","link":"#🍀-接口继承","children":[]},{"level":2,"title":"🍀 继承关系","slug":"🍀-继承关系","link":"#🍀-继承关系","children":[]},{"level":2,"title":"🍀 default 方法","slug":"🍀-default-方法","link":"#🍀-default-方法","children":[]},{"level":2,"title":"🍀 练习","slug":"🍀-练习","link":"#🍀-练习","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1717491227000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":3}]},"readingTime":{"minutes":3.84,"words":1153},"filePathRelative":"1-Java/2_面向对象/面向对象基础/8.md","localizedDate":"2024年1月4日","autoDesc":true}');export{e as data};
