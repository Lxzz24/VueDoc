const e=JSON.parse('{"key":"v-3a00854d","path":"/1-Java/6_%E6%B3%9B%E5%9E%8B/5.html","title":"extends 通配符","lang":"zh-CN","frontmatter":{"title":"extends 通配符","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 我们前面已经讲到了泛型的继承关系： Pair 不是 Pair 的子类。 假设我们定义了 Pair ： 然后，我们又针对 Pair 类型写了一个静态方法，它接收的参数类型是 Pair ： 上述代码是可以正常编译的。使用的时候，我们传入： [!caution] 传入的类型是 Pair，实际参数类型是 (Integer, Integer...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/6_%E6%B3%9B%E5%9E%8B/5.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"extends 通配符"}],["meta",{"property":"og:description","content":"目录 [[toc]] 我们前面已经讲到了泛型的继承关系： Pair 不是 Pair 的子类。 假设我们定义了 Pair ： 然后，我们又针对 Pair 类型写了一个静态方法，它接收的参数类型是 Pair ： 上述代码是可以正常编译的。使用的时候，我们传入： [!caution] 传入的类型是 Pair，实际参数类型是 (Integer, Integer..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-04T08:53:47.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-06-04T08:53:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"extends 通配符\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-04T08:53:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 extends 通配符的作用","slug":"🍀-extends-通配符的作用","link":"#🍀-extends-通配符的作用","children":[]},{"level":2,"title":"🍀 使用 extends 限定 T 类型","slug":"🍀-使用-extends-限定-t-类型","link":"#🍀-使用-extends-限定-t-类型","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1717491227000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":4}]},"readingTime":{"minutes":5.41,"words":1624},"filePathRelative":"1-Java/6_泛型/5.md","localizedDate":"2024年1月4日","autoDesc":true}');export{e as data};
