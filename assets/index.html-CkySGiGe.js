import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as r,c as s,a as e,b as l,w as a,d as c,e as i}from"./app-CvlAI_tu.js";const d="/VueDoc/assets/relationship_between_data_structure_and_algorithm-20240527154837781-z5UbgwGS.png",u={},_={class:"hint-container details"},h=e("summary",null,"目录",-1),m={class:"table-of-contents"},p=c('<h2 id="🍀-算法定义" tabindex="-1"><a class="header-anchor" href="#🍀-算法定义" aria-hidden="true">#</a> 🍀 算法定义</h2><p><strong>算法</strong>（<em>algorithm</em>）是在有限时间内解决特定问题的一组指令或操作步骤，它具有以下特性。</p><ul><li>问题是明确的，包含清晰的输入和输出定义。</li><li>具有可行性，能够在有限步骤、时间和内存空间下完成。</li><li>各步骤都有确定的含义，在相同的输入和运行条件下，输出始终相同。</li></ul><h2 id="🍀-数据结构定义" tabindex="-1"><a class="header-anchor" href="#🍀-数据结构定义" aria-hidden="true">#</a> 🍀 数据结构定义</h2><p><strong>数据结构</strong>（<em>data structure</em>）是组织和存储数据的方式，涵盖数据内容、数据之间关系和数据操作方法，它具有以下设计目标。</p><ul><li>空间占用尽量少，以节省计算机内存。</li><li>数据操作尽可能快速，涵盖数据访问、添加、删除、更新等。</li><li>提供简洁的数据表示和逻辑信息，以便算法高效运行。</li></ul><p><em>数据结构设计是一个充满权衡的过程</em>。如果想在某方面取得提升，往往需要在另一方面作出妥协。下面举两个例子。</p><ul><li>链表相较于数组，在数据添加和删除操作上更加便捷，但牺牲了数据访问速度。</li><li>图相较于链表，提供了更丰富的逻辑信息，但需要占用更大的内存空间。</li></ul><h2 id="🍀-数据结构与算法的关系" tabindex="-1"><a class="header-anchor" href="#🍀-数据结构与算法的关系" aria-hidden="true">#</a> 🍀 数据结构与算法的关系</h2><p>如图所示，数据结构与算法高度相关、紧密结合，具体表现在以下三个方面。</p><ul><li>数据结构是算法的基石。数据结构为算法提供了结构化存储的数据，以及操作数据的方法。</li><li>算法是数据结构发挥作用的舞台。数据结构本身仅存储数据信息，结合算法才能解决特定问题。</li><li>算法通常可以基于不同的数据结构实现，但执行效率可能相差很大，选择合适的数据结构是关键。</li></ul><figure><img src="'+d+'" alt="数据结构与算法的关系" tabindex="0" loading="lazy"><figcaption>数据结构与算法的关系</figcaption></figure><p>数据结构与算法犹如拼装积木。一套积木，除了包含许多零件之外，还附有详细的组装说明书。我们按照说明书一步步操作，就能组装出精美的积木模型。</p>',13);function f(g,x){const t=o("router-link");return r(),s("div",null,[e("details",_,[h,e("nav",m,[e("ul",null,[e("li",null,[l(t,{to:"#🍀-算法定义"},{default:a(()=>[i("🍀 算法定义")]),_:1})]),e("li",null,[l(t,{to:"#🍀-数据结构定义"},{default:a(()=>[i("🍀 数据结构定义")]),_:1})]),e("li",null,[l(t,{to:"#🍀-数据结构与算法的关系"},{default:a(()=>[i("🍀 数据结构与算法的关系")]),_:1})])])])]),p])}const k=n(u,[["render",f],["__file","index.html.vue"]]);export{k as default};
