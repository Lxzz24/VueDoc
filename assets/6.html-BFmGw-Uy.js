import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as t,c as o,a as n,b as p,w as c,d as l,e as i}from"./app-CvlAI_tu.js";const u="/VueDoc/assets/20221124092901-MTeiVhsG.png",d={},k={class:"hint-container details"},r=n("summary",null,"目录",-1),m={class:"table-of-contents"},v=l(`<p>我们已经讲过，计算机存储的当前时间，本质上只是一个不断递增的整数。Java 提供的 <code>System.currentTimeMillis()</code> 返回的就是以毫秒表示的当前时间戳。</p><p>这个当前时间戳在 java.time 中以 <code>Instant</code> 类型表示，我们用 <code>Instant.now()</code> 获取当前时间戳，效果和 <code>System.currentTimeMillis()</code> 类似：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Instant</span> now <span class="token operator">=</span> <span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getEpochSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 秒</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">toEpochMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 毫秒</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印的结果类似：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1568568760
1568568760316
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>实际上，<code>Instant</code> 内部只有两个核心字段：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Instant</span> <span class="token keyword">implements</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> seconds<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> nanos<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个是以秒为单位的时间戳，一个是更精确的纳秒精度。它和 <code>System.currentTimeMillis()</code> 返回的 long 相比，只是多了更高精度的纳秒。</p><p>既然 <code>Instant</code> 就是时间戳，那么，给它附加上一个时区，就可以创建出 <code>ZonedDateTime</code> ：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 以指定时间戳创建 Instant:</span>
<span class="token class-name">Instant</span> ins <span class="token operator">=</span> <span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">ofEpochSecond</span><span class="token punctuation">(</span><span class="token number">1568568760</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ZonedDateTime</span> zdt <span class="token operator">=</span> ins<span class="token punctuation">.</span><span class="token function">atZone</span><span class="token punctuation">(</span><span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">systemDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>zdt<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2019-09-16T01:32:40+08:00[Asia/Shanghai]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可见，对于某一个时间戳，给它关联上指定的 <code>ZoneId</code>，就得到了 <code>ZonedDateTime</code>，继而可以获得了对应时区的 <code>LocalDateTime</code> 。</p><p>所以，<code>LocalDateTime</code>，<code>ZoneId</code>，<code>Instant</code>，<code>ZonedDateTime</code> 和 <code>long</code> 都可以互相转换：</p><figure><img src="`+u+'" alt="20221124092901" tabindex="0" loading="lazy"><figcaption>20221124092901</figcaption></figure><p>转换的时候，只需要留意 <code>long</code> 类型以毫秒还是秒为单位即可。</p><h2 id="🍀-小结" tabindex="-1"><a class="header-anchor" href="#🍀-小结" aria-hidden="true">#</a> 🍀 小结</h2><p><code>Instant</code> 表示高精度时间戳，它可以和 <code>ZonedDateTime</code> 以及 <code>long</code> 互相转换。</p>',16);function b(g,f){const s=e("router-link");return t(),o("div",null,[n("details",k,[r,n("nav",m,[n("ul",null,[n("li",null,[p(s,{to:"#🍀-小结"},{default:c(()=>[i("🍀 小结")]),_:1})])])])]),v])}const y=a(d,[["render",b],["__file","6.html.vue"]]);export{y as default};
