import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as l,c as i,a as n,b as a,w as o,e as s,d as u}from"./app-CvlAI_tu.js";const r={},d={class:"hint-container details"},k=n("summary",null,"目录",-1),v={class:"table-of-contents"},m=n("p",null,"我们知道，Java 标准库提供了一系列常用的哈希算法。",-1),b=n("p",null,"但如果我们要用的某种算法，Java 标准库没有提供怎么办？",-1),g=n("p",null,"方法一：自己写一个，难度很大；",-1),y=n("p",null,"方法二：找一个现成的第三方库，直接使用。",-1),_={href:"https://www.bouncycastle.org/",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,"我们来看一下如何使用 BouncyCastle 这个第三方提供的算法。",-1),w=n("code",null,"bcprov-jdk18on-xxx.jar",-1),f={href:"https://www.bouncycastle.org/latest_releases.html",target:"_blank",rel:"noopener noreferrer"},x=u(`<p>Java 标准库的 <code>java.security</code> 包提供了一种标准机制，允许第三方提供商无缝接入。我们要使用 BouncyCastle 提供的 RipeMD160 算法，需要先把 BouncyCastle 注册一下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>public class Main {
    public static void main(String[] args) throws Exception {
        // 注册 BouncyCastle:
        Security.addProvider(new BouncyCastleProvider());
        // 按名称正常调用:
        MessageDigest md = MessageDigest.getInstance(&quot;RipeMD160&quot;);
        md.update(&quot;HelloWorld&quot;.getBytes(&quot;UTF-8&quot;));
        byte[] result = md.digest();
        System.out.println(new BigInteger(1, result).toString(16));
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，注册 BouncyCastle 是通过下面的语句实现的：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Security.addProvider(new BouncyCastleProvider());
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注册只需要在启动时进行一次，后续就可以使用 BouncyCastle 提供的所有哈希算法和加密算法。</p><h2 id="🍀-练习" tabindex="-1"><a class="header-anchor" href="#🍀-练习" aria-hidden="true">#</a> 🍀 练习</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>itranswarp<span class="token punctuation">.</span>learnjava</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigInteger</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">Security</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>jce<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span><span class="token class-name">BouncyCastleProvider</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// 注册 BouncyCastle:</span>
		<span class="token class-name">Security</span><span class="token punctuation">.</span><span class="token function">addProvider</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BouncyCastleProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 按名称正常调用:</span>
		<span class="token class-name">MessageDigest</span> md <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;RipeMD160&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		md<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&quot;HelloWorld&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> md<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🍀-小结" tabindex="-1"><a class="header-anchor" href="#🍀-小结" aria-hidden="true">#</a> 🍀 小结</h2><p>BouncyCastle 是一个开源的第三方算法提供商；</p><p>BouncyCastle 提供了很多 Java 标准库没有提供的哈希算法和加密算法；</p><p>使用第三方算法前需要通过 <code>Security.addProvider()</code> 注册。</p>`,11);function B(C,j){const t=p("router-link"),e=p("ExternalLinkIcon");return l(),i("div",null,[n("details",d,[k,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#🍀-练习"},{default:o(()=>[s("🍀 练习")]),_:1})]),n("li",null,[a(t,{to:"#🍀-小结"},{default:o(()=>[s("🍀 小结")]),_:1})])])])]),m,b,g,y,n("p",null,[n("a",_,[s("BouncyCastle"),a(e)]),s(" 就是一个提供了很多哈希算法和加密算法的第三方库。它提供了 Java 标准库没有的一些算法，例如，RipeMD160 哈希算法。")]),h,n("p",null,[s("首先，我们必须把 BouncyCastle 提供的 jar 包放到 classpath 中。这个 jar 包就是 "),w,s("，可以从 "),n("a",f,[s("官方网站"),a(e)]),s(" 下载。")]),x])}const M=c(r,[["render",B],["__file","3.html.vue"]]);export{M as default};
