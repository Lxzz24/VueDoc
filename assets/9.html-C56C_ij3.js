const t=JSON.parse('{"key":"v-45e4d73c","path":"/1-Java/13_%E5%A4%9A%E7%BA%BF%E7%A8%8B/9.html","title":"使用 wait 和 notify","lang":"zh-CN","frontmatter":{"title":"使用 wait 和 notify","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 在 Java 程序中，synchronized 解决了多线程竞争的问题。例如，对于一个任务管理器，多个线程同时往队列中添加任务，可以用 synchronized 加锁： 但是 synchronized 并没有解决多线程协调的问题。 仍然以上面的 TaskQueue 为例，我们再编写一个 getTask() 方法取出队列的第一个任务...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/13_%E5%A4%9A%E7%BA%BF%E7%A8%8B/9.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"使用 wait 和 notify"}],["meta",{"property":"og:description","content":"目录 [[toc]] 在 Java 程序中，synchronized 解决了多线程竞争的问题。例如，对于一个任务管理器，多个线程同时往队列中添加任务，可以用 synchronized 加锁： 但是 synchronized 并没有解决多线程协调的问题。 仍然以上面的 TaskQueue 为例，我们再编写一个 getTask() 方法取出队列的第一个任务..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 wait 和 notify\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":5.74,"words":1723},"filePathRelative":"1-Java/13_多线程/9.md","localizedDate":"2024年1月4日","autoDesc":true}');export{t as data};
