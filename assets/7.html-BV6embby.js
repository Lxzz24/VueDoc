const e=JSON.parse('{"key":"v-427b25fe","path":"/1-Java/13_%E5%A4%9A%E7%BA%BF%E7%A8%8B/7.html","title":"同步方法","lang":"zh-CN","frontmatter":{"title":"同步方法","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 我们知道 Java 程序依靠 synchronized 对线程进行同步，使用 synchronized 的时候，锁住的是哪个对象非常重要。 让线程自己选择锁对象往往会使得代码逻辑混乱，也不利于封装。更好的方法是把 synchronized 逻辑封装起来。例如，我们编写一个计数器如下： 这样一来，线程调用 add()、`dec() ...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/13_%E5%A4%9A%E7%BA%BF%E7%A8%8B/7.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"同步方法"}],["meta",{"property":"og:description","content":"目录 [[toc]] 我们知道 Java 程序依靠 synchronized 对线程进行同步，使用 synchronized 的时候，锁住的是哪个对象非常重要。 让线程自己选择锁对象往往会使得代码逻辑混乱，也不利于封装。更好的方法是把 synchronized 逻辑封装起来。例如，我们编写一个计数器如下： 这样一来，线程调用 add()、`dec() ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"同步方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":3.19,"words":958},"filePathRelative":"1-Java/13_多线程/7.md","localizedDate":"2024年1月4日","autoDesc":true}');export{e as data};
