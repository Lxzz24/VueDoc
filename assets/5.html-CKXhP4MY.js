const t=JSON.parse('{"key":"v-d112d33e","path":"/1-Java/11_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/5.html","title":"非贪婪匹配","lang":"zh-CN","frontmatter":{"title":"非贪婪匹配","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 在介绍非贪婪匹配前，我们先看一个简单的问题： 给定一个字符串表示的数字，判断该数字末尾 0 的个数。例如： \\"123000\\"：3 个 0; \\"10100\\"：2 个 0; \\"1001\\"：0 个 0; 可以很容易地写出该正则表达式：(\\\\d+)(0*)，Java 代码如下： 然而打印的第二个子串是空字符串 \\"\\"。 实际上，我们期望分组匹...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/11_%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/5.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"非贪婪匹配"}],["meta",{"property":"og:description","content":"目录 [[toc]] 在介绍非贪婪匹配前，我们先看一个简单的问题： 给定一个字符串表示的数字，判断该数字末尾 0 的个数。例如： \\"123000\\"：3 个 0; \\"10100\\"：2 个 0; \\"1001\\"：0 个 0; 可以很容易地写出该正则表达式：(\\\\d+)(0*)，Java 代码如下： 然而打印的第二个子串是空字符串 \\"\\"。 实际上，我们期望分组匹..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"非贪婪匹配\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":1.84,"words":553},"filePathRelative":"1-Java/11_正则表达式/5.md","localizedDate":"2024年1月4日","autoDesc":true}');export{t as data};
