const t=JSON.parse('{"key":"v-78c8debe","path":"/1-Java/10_%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/2.html","title":"使用 Fixture","lang":"zh-CN","frontmatter":{"title":"使用 Fixture","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 在一个单元测试中，我们经常编写多个 @Test 方法，来分组、分类对目标代码进行测试。 在测试的时候，我们经常遇到一个对象需要初始化，测试完可能还需要清理的情况。如果每个 @Test 方法都写一遍这样的重复代码，显然比较麻烦。 JUnit 提供了编写测试前准备、测试后清理的固定代码，我们称之为 Fixture。 我们来看一个具体的...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/10_%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/2.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"使用 Fixture"}],["meta",{"property":"og:description","content":"目录 [[toc]] 在一个单元测试中，我们经常编写多个 @Test 方法，来分组、分类对目标代码进行测试。 在测试的时候，我们经常遇到一个对象需要初始化，测试完可能还需要清理的情况。如果每个 @Test 方法都写一遍这样的重复代码，显然比较麻烦。 JUnit 提供了编写测试前准备、测试后清理的固定代码，我们称之为 Fixture。 我们来看一个具体的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 Fixture\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 练习","slug":"🍀-练习","link":"#🍀-练习","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":2.79,"words":837},"filePathRelative":"1-Java/10_单元测试/2.md","localizedDate":"2024年1月4日","autoDesc":true}');export{t as data};
