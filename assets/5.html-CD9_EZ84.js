const e=JSON.parse('{"key":"v-be2ac9ba","path":"/1-Java/7_%E9%9B%86%E5%90%88/5.html","title":"编写 equals 和 hashCode","lang":"zh-CN","frontmatter":{"title":"编写 equals 和 hashCode","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 我们知道 Map 是一种 键-值（key-value）映射表，可以通过 key 快速查找对应的 value 。 以 HashMap 为例，观察下面的代码： HashMap 之所以能根据 key 直接拿到 value，原因是它内部通过 空间换时间 的方法，用一个大数组存储所有 value，并根据 key 直接计算出 value 应该...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/7_%E9%9B%86%E5%90%88/5.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"编写 equals 和 hashCode"}],["meta",{"property":"og:description","content":"目录 [[toc]] 我们知道 Map 是一种 键-值（key-value）映射表，可以通过 key 快速查找对应的 value 。 以 HashMap 为例，观察下面的代码： HashMap 之所以能根据 key 直接拿到 value，原因是它内部通过 空间换时间 的方法，用一个大数组存储所有 value，并根据 key 直接计算出 value 应该..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-04T08:53:47.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-06-04T08:53:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编写 equals 和 hashCode\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-04T08:53:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 延伸阅读","slug":"🍀-延伸阅读","link":"#🍀-延伸阅读","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1717491227000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":3}]},"readingTime":{"minutes":7.62,"words":2286},"filePathRelative":"1-Java/7_集合/5.md","localizedDate":"2024年1月4日","autoDesc":true}');export{e as data};
