import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as c,c as o,a as s,b as l,w as e,e as a,d as m}from"./app-CvlAI_tu.js";const r="/VueDoc/assets/SE0401-CtOLhhPu.png",p={},d={class:"hint-container details"},u=s("summary",null,"目录",-1),h={class:"table-of-contents"},g=s("h2",{id:"🍀-类-class",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#🍀-类-class","aria-hidden":"true"},"#"),a(" 🍀 类 (Class)")],-1),v=s("p",null,"是对一类事物的描述，是抽象的、概念上的定义。",-1),k=s("h3",{id:"java-类及类的成员",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#java-类及类的成员","aria-hidden":"true"},"#"),a(" Java 类及类的成员")],-1),b=s("p",null,"常见的类的成员有：",-1),_=s("ul",null,[s("li",null,[s("strong",null,[s("em",null,"属性")]),a(" ：对应类中的成员变量 "),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"属性"),s("mo",null,"="),s("mtext",null,"成员变量"),s("mo",null,"="),s("mi",null,"F"),s("mi",null,"i"),s("mi",null,"e"),s("mi",null,"l"),s("mi",null,"d"),s("mo",null,"="),s("mtext",null,"域、字段")]),s("annotation",{encoding:"application/x-tex"},"属性 = 成员变量 = Field = 域、字段")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"属性"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"成员变量"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"域、字段")])])])])])]),s("li",null,[s("strong",null,[s("em",null,"方法")]),a(" ：对应类中的成员方法 "),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"方法"),s("mo",null,"="),s("mo",{stretchy:"false"},"("),s("mtext",null,"成员"),s("mo",{stretchy:"false"},")"),s("mtext",null,"方法"),s("mo",null,"="),s("mtext",null,"函数"),s("mo",null,"="),s("mi",null,"M"),s("mi",null,"e"),s("mi",null,"t"),s("mi",null,"h"),s("mi",null,"o"),s("mi",null,"d")]),s("annotation",{encoding:"application/x-tex"},"方法 = (成员)方法 = 函数 = Method")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"方法"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord cjk_fallback"},"成员"),s("span",{class:"mclose"},")"),s("span",{class:"mord cjk_fallback"},"方法"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"函数"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"d")])])])])])])],-1),y=m('<figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="类的语法格式" tabindex="-1"><a class="header-anchor" href="#类的语法格式" aria-hidden="true">#</a> 类的语法格式</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>修饰符 <span class="token keyword">class</span> 类名 <span class="token punctuation">{</span>
	属性声明<span class="token punctuation">;</span>
	方法声明<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>修饰符 <code>public</code> ：类可以被任意访问<br> 类的正文要用 <code>{</code> <code>}</code> 括起来</p></div><p>举例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> age <span class="token punctuation">;</span>
	<span class="token comment">//声明私有变量 age</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//声明方法 showAge()</span>
		age <span class="token operator">=</span> i<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建-java-自定义类" tabindex="-1"><a class="header-anchor" href="#创建-java-自定义类" aria-hidden="true">#</a> 创建 Java 自定义类</h3><ol><li><em>定义类</em>（考虑修饰符、类名）</li><li><em>编写类的属性</em>（考虑修饰符、属性类型、属性名、初始化值）</li><li><em>编写类的方法</em>（考虑修饰符、返回值类型、方法名、形参等）</li></ol><h2 id="🍀-对象-object" tabindex="-1"><a class="header-anchor" href="#🍀-对象-object" aria-hidden="true">#</a> 🍀 对象 (Object)</h2><p>是实际存在的该类事物的每个个体，因而也称为 <strong><em>实例</em></strong> (instance)。</p><p><strong>“万事万物皆对象”</strong></p><p>可以理解为：</p><ul><li><strong><em>类</em></strong> = 抽象概念的人；</li><li><strong><em>对象</em></strong> = 实实在在的某个人；</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>面向对象程序设计的重点是 <em>类的设计</em></li><li>类的设计，其实就是 <em>类的成员的设计</em></li></ul></div><hr>`,15);function f(x,j){const n=i("router-link");return c(),o("div",null,[s("details",d,[u,s("nav",h,[s("ul",null,[s("li",null,[l(n,{to:"#🍀-类-class"},{default:e(()=>[a("🍀 类 (Class)")]),_:1}),s("ul",null,[s("li",null,[l(n,{to:"#java-类及类的成员"},{default:e(()=>[a("Java 类及类的成员")]),_:1})]),s("li",null,[l(n,{to:"#类的语法格式"},{default:e(()=>[a("类的语法格式")]),_:1})]),s("li",null,[l(n,{to:"#创建-java-自定义类"},{default:e(()=>[a("创建 Java 自定义类")]),_:1})])])]),s("li",null,[l(n,{to:"#🍀-对象-object"},{default:e(()=>[a("🍀 对象 (Object)")]),_:1})])])])]),g,v,k,b,_,y])}const C=t(p,[["render",f],["__file","1.html.vue"]]);export{C as default};
