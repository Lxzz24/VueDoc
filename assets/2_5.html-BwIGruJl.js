const e=JSON.parse('{"key":"v-2c9339a1","path":"/1-Java/19_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/2_5.html","title":"外观","lang":"zh-CN","frontmatter":{"title":"外观","category":"Java 教程","tag":"Java","headerDepth":1,"description":"为子系统中的一组接口提供一个一致的界面。Facade 模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。 外观模式，即 Facade ，是一个比较简单的模式。它的基本思想如下： 如果客户端要跟许多子系统打交道，那么客户端需要了解各个子系统的接口，比较麻烦。如果有一个统一的 “中介”，让客户端只跟中介打交道，中介再去跟各个子系统打交道，对客户端...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/19_%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/2_5.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"外观"}],["meta",{"property":"og:description","content":"为子系统中的一组接口提供一个一致的界面。Facade 模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。 外观模式，即 Facade ，是一个比较简单的模式。它的基本思想如下： 如果客户端要跟许多子系统打交道，那么客户端需要了解各个子系统的接口，比较麻烦。如果有一个统一的 “中介”，让客户端只跟中介打交道，中介再去跟各个子系统打交道，对客户端..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"外观\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 练习","slug":"🍀-练习","link":"#🍀-练习","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704939586000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":1.95,"words":586},"filePathRelative":"1-Java/19_设计模式/2_5.md","localizedDate":"2024年1月11日","autoDesc":true}');export{e as data};
