const t=JSON.parse('{"key":"v-383e1244","path":"/1-Java/13_%E5%A4%9A%E7%BA%BF%E7%A8%8B/1.html","title":"多线程基础","lang":"zh-CN","frontmatter":{"title":"多线程基础","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 现代操作系统（Windows，macOS，Linux）都可以执行多任务。多任务就是同时运行多个任务，例如： 20220624165242 CPU 执行代码都是一条一条顺序执行的，但是，即使是单核 cpu，也可以同时运行多个任务。因为操作系统执行多任务实际上就是让 CPU 对多个任务轮流交替执行。 例如，假设我们有语文、数学、英语 ...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/13_%E5%A4%9A%E7%BA%BF%E7%A8%8B/1.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"多线程基础"}],["meta",{"property":"og:description","content":"目录 [[toc]] 现代操作系统（Windows，macOS，Linux）都可以执行多任务。多任务就是同时运行多个任务，例如： 20220624165242 CPU 执行代码都是一条一条顺序执行的，但是，即使是单核 cpu，也可以同时运行多个任务。因为操作系统执行多任务实际上就是让 CPU 对多个任务轮流交替执行。 例如，假设我们有语文、数学、英语 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多线程基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 进程","slug":"🍀-进程","link":"#🍀-进程","children":[]},{"level":2,"title":"🍀 进程 vs 线程","slug":"🍀-进程-vs-线程","link":"#🍀-进程-vs-线程","children":[]},{"level":2,"title":"🍀 多线程","slug":"🍀-多线程","link":"#🍀-多线程","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":3.84,"words":1153},"filePathRelative":"1-Java/13_多线程/1.md","localizedDate":"2024年1月4日","autoDesc":true}');export{t as data};
