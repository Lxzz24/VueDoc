import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as c,c as l,a as n,b as a,w as t,d as u,e as p}from"./app-CvlAI_tu.js";const i={},k={class:"hint-container details"},r=n("summary",null,"目录",-1),d={class:"table-of-contents"},m=u(`<p>发送 Email 的过程我们在上一节已经讲过了，客户端总是通过 SMTP 协议把邮件发送给 MTA。</p><p>接收 Email 则相反，因为邮件最终到达收件人的 MDA 服务器，所以，接收邮件是收件人用自己的客户端把邮件从 MDA 服务器上抓取到本地的过程。</p><p>接收邮件使用最广泛的协议是 POP3：Post Office Protocol version 3，它也是一个建立在 TCP 连接之上的协议。POP3 服务器的标准端口是 110，如果整个会话需要加密，那么使用加密端口 995。</p><p>另一种接收邮件的协议是 IMAP：Internet Mail Access Protocol，它使用标准端口 143 和加密端口 993。IMAP 和 POP3 的主要区别是，IMAP 协议在本地的所有操作都会自动同步到服务器上，并且，IMAP 可以允许用户在邮件服务器的收件箱中创建文件夹。</p><p>JavaMail 也提供了 IMAP 协议的支持。因为 POP3 和 IMAP 的使用方式非常类似，因此我们只介绍 POP3 的用法。</p><p>使用 POP3 收取 Email 时，我们无需关心 POP3 协议底层，因为 JavaMail 提供了高层接口。首先需要连接到 Store 对象：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 准备登录信息:</span>
<span class="token class-name">String</span> host <span class="token operator">=</span> <span class="token string">&quot;pop3.example.com&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> port <span class="token operator">=</span> <span class="token number">995</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;bob@example.com&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">Properties</span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
props<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.store.protocol&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pop3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 协议名称</span>
props<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.pop3.host&quot;</span><span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// POP3 主机名</span>
props<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.pop3.port&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 端口号</span>
<span class="token comment">// 启动 SSL:</span>
props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.socketFactory.class&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;javax.net.ssl.SSLSocketFactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.socketFactory.port&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 连接到 Store:</span>
<span class="token class-name">URLName</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLName</span><span class="token punctuation">(</span><span class="token string">&quot;pop3&quot;</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> post<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">Session</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
session<span class="token punctuation">.</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 显示调试信息</span>
<span class="token class-name">Store</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">POP3SSLStore</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
store<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个 <code>Store</code> 对象表示整个邮箱的存储，要收取邮件，我们需要通过 <code>Store</code> 访问指定的 <code>Folder</code>（文件夹），通常是 <code>INBOX</code> 表示收件箱：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取收件箱:</span>
<span class="token class-name">Folder</span> folder <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getFolder</span><span class="token punctuation">(</span><span class="token string">&quot;INBOX&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 以读写方式打开:</span>
folder<span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span><span class="token class-name">Folder</span><span class="token punctuation">.</span><span class="token constant">READ_WRITE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 打印邮件总数 / 新邮件数量 / 未读数量 / 已删除数量:</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Total messages:&quot;</span> <span class="token operator">+</span> folder<span class="token punctuation">.</span><span class="token function">getMessageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;New messages:&quot;</span> <span class="token operator">+</span> folder<span class="token punctuation">.</span><span class="token function">getNewMessageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unread messages:&quot;</span> <span class="token operator">+</span> folder<span class="token punctuation">.</span><span class="token function">getUnreadMessageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Deleted messages:&quot;</span> <span class="token operator">+</span> folder<span class="token punctuation">.</span><span class="token function">getDeletedMessageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取每一封邮件:</span>
<span class="token class-name">Message</span><span class="token punctuation">[</span><span class="token punctuation">]</span> messages <span class="token operator">=</span> folder<span class="token punctuation">.</span><span class="token function">getMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Message</span> message <span class="token operator">:</span> messages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 打印每一封邮件:</span>
    <span class="token function">printMessage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MimeMessage</span><span class="token punctuation">)</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当我们获取到一个 <code>Message</code> 对象时，可以强制转型为 MimeMessage，然后打印出邮件主题、发件人、收件人等信息：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">printMessage</span><span class="token punctuation">(</span><span class="token class-name">MimeMessage</span> msg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">MessagingException</span> <span class="token punctuation">{</span>
    <span class="token comment">// 邮件主题:</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Subject:&quot;</span> <span class="token operator">+</span> <span class="token class-name">MimeUtility</span><span class="token punctuation">.</span><span class="token function">decodeText</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 发件人:</span>
    <span class="token class-name">Address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> froms <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">InternetAddress</span> address <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InternetAddress</span><span class="token punctuation">)</span> froms<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> personal <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">getPersonal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> from <span class="token operator">=</span> personal <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> address<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token class-name">MimeUtility</span><span class="token punctuation">.</span><span class="token function">decodeText</span><span class="token punctuation">(</span>personal<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&lt;&quot;</span> <span class="token operator">+</span> address<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;From:&quot;</span> <span class="token operator">+</span> from<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 继续打印收件人:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比较麻烦的是获取邮件的正文。一个 <code>MimeMessage</code> 对象也是一个 <code>Part</code> 对象，它可能只包含一个文本，也可能是一个 <code>Multipart</code> 对象，即由几个 <code>Part</code> 构成，因此，需要递归地解析出完整的正文：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> <span class="token function">getBody</span><span class="token punctuation">(</span><span class="token class-name">Part</span> part<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MessagingException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">&quot;text/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Part 是文本:</span>
        <span class="token keyword">return</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">&quot;multipart/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Part 是一个 Multipart 对象:</span>
        <span class="token class-name">Multipart</span> multipart <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Multipart</span><span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 循环解析每个子 Part:</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> multipart<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">BodyPart</span> bodyPart <span class="token operator">=</span> multipart<span class="token punctuation">.</span><span class="token function">getBodyPart</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> body <span class="token operator">=</span> <span class="token function">getBody</span><span class="token punctuation">(</span>bodyPart<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>body<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> body<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后记得关闭 <code>Folder</code> 和 <code>Store</code>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>folder<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 传入 true 表示删除操作会同步到服务器上（即删除服务器收件箱的邮件）</span>
store<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🍀-练习" tabindex="-1"><a class="header-anchor" href="#🍀-练习" aria-hidden="true">#</a> 🍀 练习</h2><p>使用 POP3 接收邮件</p><h2 id="🍀-小结" tabindex="-1"><a class="header-anchor" href="#🍀-小结" aria-hidden="true">#</a> 🍀 小结</h2><p>使用 Java 接收 Email 时，可以用 POP3 协议或 IMAP 协议。</p><p>使用 POP3 协议时，需要用 Maven 引入 JavaMail 依赖，并确定 POP3 服务器的域名／端口／是否使用 SSL 等，然后，调用相关 API 接收 Email。</p><p>设置 debug 模式可以查看通信详细内容，便于排查错误。</p>`,21);function v(g,b){const s=e("router-link");return c(),l("div",null,[n("details",k,[r,n("nav",d,[n("ul",null,[n("li",null,[a(s,{to:"#🍀-练习"},{default:t(()=>[p("🍀 练习")]),_:1})]),n("li",null,[a(s,{to:"#🍀-小结"},{default:t(()=>[p("🍀 小结")]),_:1})])])])]),m])}const q=o(i,[["render",v],["__file","5.html.vue"]]);export{q as default};
