import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as d,o as t,c as l,a as e,b as n,w as s,e as a,d as o}from"./app-CvlAI_tu.js";const p="/VueDoc/assets/image-20231130111157485-6W8X2HGZ.png",v={},m={class:"hint-container details"},u=e("summary",null,"目录",-1),h={class:"table-of-contents"},_=o(`<p>我们使用 Maven 时，基本上只会用到 <code>mvn</code> 这一个命令。有些童鞋可能听说过 <code>mvnw</code>，这个是啥？</p><p><code>mvnw</code> 是 Maven Wrapper 的缩写。因为我们安装 Maven 时，默认情况下，系统所有项目都会使用全局安装的这个 Maven 版本。但是，对于某些项目来说，它可能必须使用某个特定的 Maven 版本，这个时候，就可以使用 Maven Wrapper，它可以负责给这个特定的项目安装指定版本的 Maven，而其他项目不受影响。</p><p>简单地说，Maven Wrapper 就是给一个项目提供一个独立的，指定版本的 Maven 给它使用。</p><h2 id="🍀-安装-maven-wrapper" tabindex="-1"><a class="header-anchor" href="#🍀-安装-maven-wrapper" aria-hidden="true">#</a> 🍀 安装 Maven Wrapper</h2><p>安装 Maven Wrapper 最简单的方式是在项目的根目录（即 <code>pom.xml</code> 所在的目录）下运行安装命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn <span class="token parameter variable">-N</span> io.takari:maven:0.7.6:wrapper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),b=e("code",null,"0.7.6",-1),g={href:"https://github.com/takari/maven-wrapper",target:"_blank",rel:"noopener noreferrer"},f=o(`<p>如果要指定使用的 Maven 版本，使用下面的安装命令指定版本，例如 <code>3.3.3</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn <span class="token parameter variable">-N</span> io.takari:maven:0.7.6:wrapper <span class="token parameter variable">-Dmaven</span><span class="token operator">=</span><span class="token number">3.3</span>.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装后，查看项目结构：</p><figure><img src="`+p+`" alt="image-20231130111157485" tabindex="0" loading="lazy"><figcaption>image-20231130111157485</figcaption></figure><p>发现多了 <code>mvnw</code>、<code>mvnw.cmd</code> 和 <code>.mvn</code> 目录，我们只需要把 <code>mvn</code> 命令改成 <code>mvnw</code> 就可以使用跟项目关联的 Maven。例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvnw clean package
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 Linux 或 macOS 下运行时需要加上 <code>./</code>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./mvnw clean package
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Maven Wrapper 的另一个作用是把项目的 <code>mvnw</code>、<code>mvnw.cmd</code> 和 <code>.mvn</code> 提交到版本库中，可以使所有开发人员使用统一的 Maven 版本。</p><h2 id="🍀-练习" tabindex="-1"><a class="header-anchor" href="#🍀-练习" aria-hidden="true">#</a> 🍀 练习</h2><p>使用 mvnw 编译 hello 项目</p><h3 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h3><p>使用 Maven Wrapper，可以为一个项目指定特定的 Maven 版本。</p>`,13);function M(w,k){const r=d("router-link"),c=d("ExternalLinkIcon");return t(),l("div",null,[e("details",m,[u,e("nav",h,[e("ul",null,[e("li",null,[n(r,{to:"#🍀-安装-maven-wrapper"},{default:s(()=>[a("🍀 安装 Maven Wrapper")]),_:1})]),e("li",null,[n(r,{to:"#🍀-练习"},{default:s(()=>[a("🍀 练习")]),_:1}),e("ul",null,[e("li",null,[n(r,{to:"#小结"},{default:s(()=>[a("小结")]),_:1})])])])])])]),_,e("p",null,[a("它会自动使用最新版本的 Maven。注意 "),b,a(" 是 Maven Wrapper 的版本。最新的 Maven Wrapper 版本可以去 "),e("a",g,[a("官方网站"),n(c)]),a(" 查看。")]),f])}const N=i(v,[["render",M],["__file","6.html.vue"]]);export{N as default};
