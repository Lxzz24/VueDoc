import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o,c as l,a as n,b as a,w as t,d as i,e}from"./app-CvlAI_tu.js";const u="/VueDoc/assets/SE0402-CNcXX9C_.png",d="/VueDoc/assets/SE0403-B8aekaE_.png",k={},r={class:"hint-container details"},v=n("summary",null,"目录",-1),m={class:"table-of-contents"},b=i(`<h2 id="🍀-1-创建类-设计类的成员" tabindex="-1"><a class="header-anchor" href="#🍀-1-创建类-设计类的成员" aria-hidden="true">#</a> 🍀 1. 创建类，设计类的成员</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
	<span class="token comment">//属性</span>
	<span class="token class-name">String</span> name<span class="token punctuation">;</span>
	<span class="token keyword">int</span> age<span class="token punctuation">;</span>
	<span class="token keyword">boolean</span> isMale<span class="token punctuation">;</span>

	<span class="token comment">//方法</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;人可以吃饭&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;人可以睡觉&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">talk</span><span class="token punctuation">(</span><span class="token class-name">String</span> language<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;人可以说话，使用的是：&quot;</span> <span class="token operator">+</span> language<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🍀-2-创建类的对象" tabindex="-1"><a class="header-anchor" href="#🍀-2-创建类的对象" aria-hidden="true">#</a> 🍀 2. 创建类的对象</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token class-name">Person</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//Scanner scan = new Scanner(System.in);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🍀-3-通过-对象-属性-或-对象-方法-调用对象的结构" tabindex="-1"><a class="header-anchor" href="#🍀-3-通过-对象-属性-或-对象-方法-调用对象的结构" aria-hidden="true">#</a> 🍀 3. 通过“对象.属性”或“对象.方法”调用对象的结构</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">//调用属性：“对象.属性”</span>
	p1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">;</span>
	p1<span class="token punctuation">.</span>isMale <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//调用方法：“对象.方法”</span>
	p1<span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	p1<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	p1<span class="token punctuation">.</span><span class="token function">talk</span><span class="token punctuation">(</span><span class="token string">&quot;Chinese&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>如果创建了一个类的多个对象，则每个对象都独立的拥有一套类的属性。 （非 static 类）意味着，如果我们修改一个对象的属性 a，则不影响另外一个对象属性 a 的值。</p></div><h2 id="🍀-4-内存解析" tabindex="-1"><a class="header-anchor" href="#🍀-4-内存解析" aria-hidden="true">#</a> 🍀 4. 内存解析</h2><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="🍀-补充" tabindex="-1"><a class="header-anchor" href="#🍀-补充" aria-hidden="true">#</a> 🍀 补充</h2><h3 id="一、理解-万事万物皆对象" tabindex="-1"><a class="header-anchor" href="#一、理解-万事万物皆对象" aria-hidden="true">#</a> 一、理解 “万事万物皆对象”</h3><ol><li>在 Java 语言范畴中，我们都将功能、结构封装到类中，通过类的实例化，来调用具体的功能结构 <ul><li>Scanner，String 等</li><li>文件：File</li><li>网络资源：URL</li></ul></li><li>涉及到 Java 语言与前端 Html 、后端的数据库交互时，前后端的结构在 Java 层面交互时，都体现为类、对象。</li></ol><h3 id="二、内存解析的说明" tabindex="-1"><a class="header-anchor" href="#二、内存解析的说明" aria-hidden="true">#</a> 二、内存解析的说明</h3><p>引用类型的变量，只可能存储两类值：null 或 地址值（含变量的类型）</p><h3 id="三、匿名对象的使用" tabindex="-1"><a class="header-anchor" href="#三、匿名对象的使用" aria-hidden="true">#</a> 三、匿名对象的使用</h3><ol><li><p>我们创建的对象，没有显式的赋给一个变量名，即为匿名对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 匿名对象</span>
    <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">playGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">1999</span><span class="token punctuation">;</span>
    <span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">showPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong><em>匿名对象只能调用一次</em></strong></p></li><li><p>匿名对象的使用如下所示</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InstanceTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">PhoneMall</span> mall <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PhoneMall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 匿名对象的使用</span>
        mall<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Phone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">PhoneMall</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Phone</span> phone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        phone<span class="token punctuation">.</span><span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        phone<span class="token punctuation">.</span><span class="token function">playGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Phone</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;发送邮件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">playGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;玩游戏&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,17);function h(f,g){const s=c("router-link");return o(),l("div",null,[n("details",r,[v,n("nav",m,[n("ul",null,[n("li",null,[a(s,{to:"#🍀-1-创建类-设计类的成员"},{default:t(()=>[e("🍀 1. 创建类，设计类的成员")]),_:1})]),n("li",null,[a(s,{to:"#🍀-2-创建类的对象"},{default:t(()=>[e("🍀 2. 创建类的对象")]),_:1})]),n("li",null,[a(s,{to:"#🍀-3-通过-对象-属性-或-对象-方法-调用对象的结构"},{default:t(()=>[e("🍀 3. 通过“对象.属性”或“对象.方法”调用对象的结构")]),_:1})]),n("li",null,[a(s,{to:"#🍀-4-内存解析"},{default:t(()=>[e("🍀 4. 内存解析")]),_:1})]),n("li",null,[a(s,{to:"#🍀-补充"},{default:t(()=>[e("🍀 补充")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#一、理解-万事万物皆对象"},{default:t(()=>[e("一、理解 “万事万物皆对象”")]),_:1})]),n("li",null,[a(s,{to:"#二、内存解析的说明"},{default:t(()=>[e("二、内存解析的说明")]),_:1})]),n("li",null,[a(s,{to:"#三、匿名对象的使用"},{default:t(()=>[e("三、匿名对象的使用")]),_:1})])])])])])]),b])}const _=p(k,[["render",h],["__file","2.html.vue"]]);export{_ as default};
