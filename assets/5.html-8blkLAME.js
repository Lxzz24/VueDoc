const t=JSON.parse('{"key":"v-7de7689b","path":"/1-Java/10_%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/5.html","title":"参数化测试","lang":"zh-CN","frontmatter":{"title":"参数化测试","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 如果待测试的输入和输出是一组数据： 可以把测试数据组织起来 用不同的测试数据调用相同的测试方法 参数化测试和普通测试稍微不同的地方在于，一个测试方法需要接收至少一个参数，然后，传入一组参数反复运行。 JUnit 提供了一个 @ParameterizedTest 注解，用来进行参数化测试。 假设我们想对 Math.abs() 进行测...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/10_%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/5.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"参数化测试"}],["meta",{"property":"og:description","content":"目录 [[toc]] 如果待测试的输入和输出是一组数据： 可以把测试数据组织起来 用不同的测试数据调用相同的测试方法 参数化测试和普通测试稍微不同的地方在于，一个测试方法需要接收至少一个参数，然后，传入一组参数反复运行。 JUnit 提供了一个 @ParameterizedTest 注解，用来进行参数化测试。 假设我们想对 Math.abs() 进行测..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"参数化测试\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 练习","slug":"🍀-练习","link":"#🍀-练习","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":2.5,"words":749},"filePathRelative":"1-Java/10_单元测试/5.md","localizedDate":"2024年1月4日","autoDesc":true}');export{t as data};
