const t=JSON.parse('{"key":"v-d834d294","path":"/1-Java/16_XML%E4%B8%8EJSON/4.html","title":"使用 Jackson","lang":"zh-CN","frontmatter":{"title":"使用 Jackson","category":"Java 教程","tag":"Java","headerDepth":1,"description":"目录 [[toc]] 前面我们介绍了 DOM 和 SAX 两种解析 XML 的标准接口。但是，无论是 DOM 还是 SAX，使用起来都不直观。 观察 XML 文档的结构： 我们发现，它完全可以对应到一个定义好的 JavaBean 中： 如果能直接从 XML 文档解析成一个 JavaBean，那比 DOM 或者 SAX 不知道容易到哪里去了。 幸运的是，...","head":[["meta",{"property":"og:url","content":"https://www.gxmnzl.cn/VueDoc/1-Java/16_XML%E4%B8%8EJSON/4.html"}],["meta",{"property":"og:site_name","content":"BLOG"}],["meta",{"property":"og:title","content":"使用 Jackson"}],["meta",{"property":"og:description","content":"目录 [[toc]] 前面我们介绍了 DOM 和 SAX 两种解析 XML 的标准接口。但是，无论是 DOM 还是 SAX，使用起来都不直观。 观察 XML 文档的结构： 我们发现，它完全可以对应到一个定义好的 JavaBean 中： 如果能直接从 XML 文档解析成一个 JavaBean，那比 DOM 或者 SAX 不知道容易到哪里去了。 幸运的是，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-16T12:34:11.000Z"}],["meta",{"property":"article:author","content":"Lxzz24"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2024-05-16T12:34:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 Jackson\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-16T12:34:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lxzz24\\"}]}"]]},"headers":[{"level":2,"title":"🍀 练习","slug":"🍀-练习","link":"#🍀-练习","children":[]},{"level":2,"title":"🍀 小结","slug":"🍀-小结","link":"#🍀-小结","children":[]}],"git":{"createdTime":1704354222000,"updatedTime":1715862851000,"contributors":[{"name":"Lxzz24","email":"lxzz108@gmail.com","commits":2}]},"readingTime":{"minutes":1.45,"words":434},"filePathRelative":"1-Java/16_XML与JSON/4.md","localizedDate":"2024年1月4日","autoDesc":true}');export{t as data};
